{"version":3,"file":"contentScript.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://swerve-chrome-extension/./src/contentScript/contentScript.ts"],"sourcesContent":["/* TODO: Create an interface to map site/page elements to their respective GAEvent data. Separating the data from the\nrendering logic would make the contentScript.ts file more portable in the event of a platform change with new mappings\nbetween site elements and their GAEvents. */\nconst rules = {\n    'https://www.servcotoyota.com/': filterServcoToyotaHomePage,\n};\n// Add helper functions to transform the event data from the interface into an HTML element to append to the relevant elements.\nfunction filterServcoToyotaHomePage() {\n    // const aTags = document.getElementsByTagName('a')\n    const viewNewInventory = document.getElementById('cta-baf0f8d3be6aa8f3cd6ae2e47e');\n    const viewPreOwnedInventory = document.getElementById('cta-a5371eed7c46f072b1fa71ca37');\n    const scheduleService = document.getElementById('cta-8a9644693b4e0be1dd50b9a28a');\n    // regex match function\n    // for (const tag of aTags) {\n    //     if (/\\b(The|the)(?!\\w)/i.test(tag.textContent)) {\n    //         const p = document.createElement(\"p\");\n    //         p.textContent = \"S-the-content\";\n    //         p.style.backgroundColor = \"yellow\"\n    //         tag.appendChild(p);\n    //     }\n    // }\n    /* Maybe add a switch case for each element and append the p element to it after enriching it through a typescript\n    interface object or json. The interface can be used to do double duty as on site documentation and as\n    structured portable documentation. */\n    if (viewNewInventory) {\n        // viewNewInventory.style.backgroundColor = \"red\"\n        const span = document.createElement(\"span\");\n        span.textContent = \"ec: S-home-hero; ea: S-new-inventory\";\n        span.style.backgroundColor = \"yellow\";\n        span.style.textTransform = \"none\";\n        viewNewInventory.appendChild(span);\n    }\n    if (viewPreOwnedInventory) {\n        // viewPreOwnedInventory.style.backgroundColor = \"yellow\"\n        const span = document.createElement(\"span\");\n        span.textContent = \"ec: S-home-hero; ea: S-preowned-inventory\";\n        span.style.backgroundColor = \"yellow\";\n        span.style.textTransform = \"none\";\n        viewPreOwnedInventory.appendChild(span);\n    }\n    if (scheduleService) {\n        // scheduleService.style.backgroundColor = \"green\"\n        const span = document.createElement(\"span\");\n        span.textContent = \"ec: S-home-hero; ea: S-schedule-service\";\n        span.style.backgroundColor = \"yellow\";\n        span.style.textTransform = \"none\";\n        scheduleService.appendChild(span);\n    }\n    // Sample for loops to iterate over arrays of tags:\n    // for (const span of spans) {\n    //     if (span.className.indexOf('ad') != -1) {\n    //         span.style.display = 'none'\n    //     }\n    // }\n    // for (const tag of aTags) {\n    //     tag.textContent = \"hello world!\"\n    // }\n    // for (const tag of aTags) {\n    //     if (tag.textContent.includes(\"i\")) {\n    //         tag.style.backgroundColor = \"yellow\"\n    //     }\n    // }\n}\n/*\nad blocker function (can be added to rules object above like this:\n'https://www.nytimes.com/': filterNYT)\n*/\n// function filterNYT () {\n//     const app = document.getElementsByClassName(\"ad dfp-ad-top-wrapper css-rfqw0c\")[0];\n//     const wrapper = document.getElementById(\"dfp-ad-top\");\n//     if (app && wrapper) { \n//       app.removeChild(wrapper);\n//     }\n// }\nif (document.URL in rules) {\n    // console.log(\"Filtered URL:\", document.URL)\n    rules[document.URL]();\n}\n"],"names":[],"sourceRoot":""}